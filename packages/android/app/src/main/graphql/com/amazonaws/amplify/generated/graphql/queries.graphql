# this is an auto generated file. This will be overwritten
query AnnotationCollectionLabelAutocomplete(
  $input: AnnotationCollectionLabelAutocompleteInput!
) {
  annotationCollectionLabelAutocomplete(input: $input) {
    items {
      context
      id
      type
      label
      total
      firstAnnotationPageId
      lastAnnotationPageId
      creatorUsername
      created
      modified
    }
    nextToken
  }
}
query GetAgent($username: String!) {
  getAgent(username: $username) {
    id
    name
    nickname
    email_sha1
    email
    homepage
    username
    created
    modified
  }
}
query ListAgents(
  $username: String
  $filter: ModelAgentFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listAgents(
    username: $username
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      name
      nickname
      email_sha1
      email
      homepage
      username
      created
      modified
    }
    nextToken
  }
}
query ListAnnotations(
  $creatorUsername: String
  $id: ModelStringKeyConditionInput
  $filter: ModelAnnotationFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listAnnotations(
    creatorUsername: $creatorUsername
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      context
      id
      created
      generated
      modified
      motivation
      via
      canonical
      creatorUsername
    }
    nextToken
  }
}
query GetAnnotation($creatorUsername: String!, $id: String!) {
  getAnnotation(creatorUsername: $creatorUsername, id: $id) {
    context
    id
    body {
      ... on ExternalBody {
        externalBodyId: id
        format
        language
        processingLanguage
        textDirection
        accessibility
        rights
      }
      ... on TextualBody {
        textualBodyId: id
        format
        language
        processingLanguage
        textDirection
        accessibility
        purpose
        rights
        value
      }
      ... on SpecificBody {
        specificBodyId: id
        purpose
        styleClass
        scope
      }
    }
    target {
      ... on ExternalTarget {
        externalTargetId: id
        format
        language
        processingLanguage
        textDirection
        accessibility
        rights
      }
      ... on TextualTarget {
        textualTargetId: id
        format
        language
        processingLanguage
        textDirection
        accessibility
        rights
        value
      }
    }
    created
    generator {
      id
      name
      nickname
      email_sha1
      email
      homepage
      username
      created
      modified
    }
    generated
    modified
    audience {
      id
    }
    motivation
    via
    canonical
    stylesheet {
      value
    }
    creator {
      id
      name
      nickname
      email_sha1
      email
      homepage
      username
      created
      modified
    }
    creatorUsername
  }
}
query ListAnnotationCollections(
  $creatorUsername: String
  $id: ModelStringKeyConditionInput
  $filter: ModelAnnotationCollectionFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listAnnotationCollections(
    creatorUsername: $creatorUsername
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      context
      id
      label
      total
      firstAnnotationPageId
      lastAnnotationPageId
      creatorUsername
      created
      modified
    }
    nextToken
  }
}
query GetAnnotationCollection($creatorUsername: String!, $id: String!) {
  getAnnotationCollection(creatorUsername: $creatorUsername, id: $id) {
    context
    id
    label
    total
    firstAnnotationPageId
    last {
      context
      id
      startIndex
      created
      modified
      partOfAnnotationCollectionId
      nextAnnotationPageId
      prevAnnotationPageId
      creatorUsername
    }
    lastAnnotationPageId
    creator {
      id
      name
      nickname
      email_sha1
      email
      homepage
      username
      created
      modified
    }
    creatorUsername
    created
    modified
    first {
      context
      id
      startIndex
      created
      modified
      partOfAnnotationCollectionId
      nextAnnotationPageId
      prevAnnotationPageId
      creatorUsername
    }
  }
}
query ListAnnotationCollectionsByLabel(
  $creatorUsername: String
  $label: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelAnnotationCollectionFilterInput
  $limit: Int
  $nextToken: String
) {
  listAnnotationCollectionsByLabel(
    creatorUsername: $creatorUsername
    label: $label
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      context
      id
      label
      total
      firstAnnotationPageId
      lastAnnotationPageId
      creatorUsername
      created
      modified
    }
    nextToken
  }
}
query GetAnnotationPageItem($creatorUsername: String!, $id: ID!) {
  getAnnotationPageItem(creatorUsername: $creatorUsername, id: $id) {
    id
    created
    modified
    annotationId
    annotationPageId
    creator {
      id
      name
      nickname
      email_sha1
      email
      homepage
      username
      created
      modified
    }
    creatorUsername
    annotation {
      context
      id
      created
      generated
      modified
      motivation
      via
      canonical
      creatorUsername
    }
    annotationPage {
      context
      id
      startIndex
      created
      modified
      partOfAnnotationCollectionId
      nextAnnotationPageId
      prevAnnotationPageId
      creatorUsername
    }
  }
}
query ListAnnotationPageItems(
  $creatorUsername: String
  $id: ModelIDKeyConditionInput
  $filter: ModelAnnotationPageItemFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listAnnotationPageItems(
    creatorUsername: $creatorUsername
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      created
      modified
      annotationId
      annotationPageId
      creatorUsername
    }
    nextToken
  }
}
query ListAnnotationPages(
  $creatorUsername: String
  $id: ModelStringKeyConditionInput
  $filter: ModelAnnotationPageFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listAnnotationPages(
    creatorUsername: $creatorUsername
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      context
      id
      startIndex
      created
      modified
      partOfAnnotationCollectionId
      nextAnnotationPageId
      prevAnnotationPageId
      creatorUsername
    }
    nextToken
  }
}
query GetAnnotationPage($creatorUsername: String!, $id: String!) {
  getAnnotationPage(creatorUsername: $creatorUsername, id: $id) {
    context
    id
    startIndex
    created
    modified
    partOfAnnotationCollectionId
    nextAnnotationPageId
    prevAnnotationPageId
    creator {
      id
      name
      nickname
      email_sha1
      email
      homepage
      username
      created
      modified
    }
    creatorUsername
    partOf {
      context
      id
      label
      total
      firstAnnotationPageId
      lastAnnotationPageId
      creatorUsername
      created
      modified
    }
    items {
      nextToken
    }
    next {
      context
      id
      startIndex
      created
      modified
      partOfAnnotationCollectionId
      nextAnnotationPageId
      prevAnnotationPageId
      creatorUsername
    }
    prev {
      context
      id
      startIndex
      created
      modified
      partOfAnnotationCollectionId
      nextAnnotationPageId
      prevAnnotationPageId
      creatorUsername
    }
  }
}
