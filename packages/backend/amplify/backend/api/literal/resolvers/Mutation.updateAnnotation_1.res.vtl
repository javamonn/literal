#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type, null, $ctx.result.cancellationReasons)
#end

#set( $ctx.stash.transactGetItems = [] ) 

## Results are ordered:
##   [GetAnnotation, ...GetAnnotationCollection]
## Further, GetAnnotationCollection order corresponds to relative order of tags
## with the update annotation input.
#set( $ctx.stash.newAnnotationCollectionResults = [] )
#foreach( $item in $util.defaultIfNull($ctx.result.items, []) )
  #if( $foreach.index == 0 )
    #set( $ctx.stash.oldAnnotationResult = $item )
  #else
    $util.qr($ctx.stash.newAnnotationCollectionResults.add($item))
  #end
#end

#if( $util.isNull($ctx.stash.oldAnnotationResult) || $ctx.stash.oldAnnotationResult.isEmpty() )
  $util.error("Annotation does not exist.", "ValidationError")
#end

#set( $ctx.stash.newTags = [] )
#foreach( $body in $util.defaultIfNull($ctx.stash.input.body, []) )
  #set( $isTextualBody = $body.type == "TEXTUAL_BODY" )
  #set( $hasId = !$util.isNull($body.id) )
  #set( $hasTag = false )
  #foreach( $motivation in $util.defaultIfNull($body.purpose, []) )
    #if( $motivation == "TAGGING" )
      #set( $hasTag = true )
    #end
  #end

  #if( $isTextualBody && $hasId && $hasTag )
    $util.qr($ctx.stash.newTags.add($body)) 
  #end
#end

#set( $ctx.stash.oldTags = [] )
#foreach( $body in $util.defaultIfNull($ctx.stash.oldAnnotationResult.body, []) )
  #set( $isTextualBody = $body.type == "TEXTUAL_BODY" )
  #set( $hasId = !$util.isNull($body.id) )
  #set( $hasTag = false )
  #foreach( $motivation in $util.defaultIfNull($body.purpose, []) )
    #if( $motivation == "TAGGING" )
      #set( $hasTag = true )
    #end
  #end

  #if( $isTextualBody && $hasId && $hasTag )
    $util.qr($ctx.stash.oldTags.add($body))
  #end
#end

#foreach( $tag in $ctx.stash.oldTags )
  #set( $isRemoved = true )
  #foreach( $tag0 in $ctx.stash.newTags )
    #if( $tag0.id == $tag.id )
      #set( $isRemoved = false )
    #end
  #end

  ## Tag is newly removed from the annotation.
  #if( $isRemoved )
    ## Use the last part of the body ID IRI as the base Tag ID.
    #set( $tagPathParts = $tag.id.split("/") )
    #if( $tagPathParts.size() < 1 )
      $util.error("Body ID is not an IRI", "ValidationError")
    #end
    #set( $endIdx = $tagPathParts.size() - 1 )
    #set( $tagId = $tagPathParts.get($endIdx) )

    #set( $annotationId = $ctx.stash.input.id )

    #set( $annotationCollectionId = "${ctx.stash.constants.ORIGIN}/creators/${ctx.stash.identity}/annotation-collections/${tagId}" )
    #set( $operation = {
      "table": $ctx.stash.constants.ANNOTATION_COLLECTION_TABLE,
      "key": {
        "creatorUsername": $util.dynamodb.toDynamoDB($ctx.stash.creatorUsername),
        "id": $util.dynamodb.toDynamoDB($annotationCollectionId)
      }
    } )

    $util.qr($ctx.stash.transactGetItems.add($operation))
  #end
#end

{}
