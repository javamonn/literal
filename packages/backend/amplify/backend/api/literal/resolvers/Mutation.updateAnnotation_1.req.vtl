#set( $ctx.stash.transactGetItems = [] ) 

## Fetch the "old" annotation, so that we can diff the tags and cascade
## updates to tables correctly.
#set( $getAnnotationOperation = {
  "table": $ctx.stash.constants.ANNOTATION_TABLE,
  "key": {
    "creatorUsername": $util.dynamodb.toDynamoDB($ctx.stash.creatorUsername), 
    "id": $util.dynamodb.toDynamoDB($ctx.stash.input.id)
  }
} )
$util.qr($ctx.stash.transactGetItems.add($getAnnotationOperation))

## For each tag associated with the update annotation, try to fetch the 
## associated Annotation Collection to determine if the tag is new w.r.t
## the creator. This overfetches, as not all tags are new w.r.t the annotation. 
#foreach( $body in $util.defaultIfNull($ctx.stash.input.body, []) )
  #set( $isTextualBody = $body.type == "TEXTUAL_BODY" )
  #set( $hasId = !$util.isNull($body.id) )
  #set( $hasTag = false )
  #foreach( $motivation in $util.defaultIfNull($body.purpose, []) )
    #if( $motivation == "TAGGING" )
      #set( $hasTag = true )
    #end
  #end

  #if( $isTextualBody && $hasId && $hasTag )

    ## Use the last part of the body ID IRI as the base Tag ID.
    #set( $tagPathParts = $body.id.split("/") )
    #if( $tagPathParts.size() < 1 )
      $util.error("Body ID is not an IRI", "ValidationError")
    #end
    #set( $endIdx = $tagPathParts.size() - 1 )
    #set( $tagId = $tagPathParts.get($endIdx) )

    #set( $annotationCollectionId = "${ctx.stash.constants.ORIGIN}/creators/${ctx.stash.identity}/annotation-collections/${tagId}" )
    #set( $operation = {
      "table": $ctx.stash.constants.ANNOTATION_COLLECTION_TABLE,
      "key": {
        "creatorUsername": $util.dynamodb.toDynamoDB($ctx.stash.creatorUsername),
        "id": $util.dynamodb.toDynamoDB($annotationCollectionId)
      }
    } )

    $util.qr($ctx.stash.transactGetItems.add($operation))
  #end
#end

{
  "version": "2018-05-29",
  "operation": "TransactGetItems",
  "transactItems": $util.toJson($ctx.stash.transactGetItems)
}
