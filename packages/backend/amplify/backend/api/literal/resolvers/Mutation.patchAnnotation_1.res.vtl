#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type, null, $ctx.result.cancellationReasons)
#end

#set( $ctx.stash.transactGetItems = [] ) 

## Results are ordered:
##   [GetAnnotation, ...GetAnnotationCollection]
## Further, GetAnnotationCollection order corresponds to relative order of tags
## within ctx.stash.newBody.
#set( $ctx.stash.newAnnotationCollectionResults = [] )
#foreach( $item in $util.defaultIfNull($ctx.result.items, []) )
  #if( $foreach.index == 0 )
    #set( $ctx.stash.oldAnnotationResult = $item )
  #else
    $util.qr($ctx.stash.newAnnotationCollectionResults.add($item))
  #end
#end

#if( $util.isNull($ctx.stash.oldAnnotationResult) || $ctx.stash.oldAnnotationResult.isEmpty() )
  $util.error("Annotation does not exist.", "ValidationError")
#end

#if( !$util.isNull($ctx.stash.newBody) )
  #set( $ctx.stash.newTags = [] )
  #foreach( $body in $util.defaultIfNull($ctx.stash.newBody, []) )
    #set( $isTextualBody = $body.type == "TEXTUAL_BODY" )
    #set( $hasId = !$util.isNull($body.id) )
    #set( $hasTag = false )
    #foreach( $motivation in $util.defaultIfNull($body.purpose, []) )
      #if( $motivation == "TAGGING" )
        #set( $hasTag = true )
      #end
    #end

    #if( $isTextualBody && $hasId && $hasTag )
      $util.qr($ctx.stash.newTags.add($body)) 
    #end
  #end

  #set( $ctx.stash.oldTags = [] )
  #foreach( $body in $util.defaultIfNull($ctx.stash.oldAnnotationResult.body, []) )
    #set( $isTextualBody = $body.type == "TEXTUAL_BODY" )
    #set( $hasId = !$util.isNull($body.id) )
    #set( $hasTag = false )
    #foreach( $motivation in $util.defaultIfNull($body.purpose, []) )
      #if( $motivation == "TAGGING" )
        #set( $hasTag = true )
      #end
    #end

    #if( $isTextualBody && $hasId && $hasTag )
      $util.qr($ctx.stash.oldTags.add($body))
    #end
  #end


  ## Diff old (i.e. currently persisted) and new (i.e. patch input) tags, and
  ## fetch associated AnnotationCollection so we can propagate updates correctly.
  #foreach( $tag in $ctx.stash.oldTags )
    #set( $isRemoved = true )
    #foreach( $tag0 in $ctx.stash.newTags )
      #if( $tag0.id == $tag.id )
        #set( $isRemoved = false )
      #end
    #end

    ## Tag is newly removed from the annotation.
    #if( $isRemoved )
      #set( $operation = {
        "table": $ctx.stash.constants.ANNOTATION_COLLECTION_TABLE,
        "key": {
          "creatorUsername": $util.dynamodb.toDynamoDB($ctx.stash.creatorUsername),
          "id": $util.dynamodb.toDynamoDB($tag.id)
        }
      } )

      $util.qr($ctx.stash.transactGetItems.add($operation))
    #end
  #end
#end

{}
