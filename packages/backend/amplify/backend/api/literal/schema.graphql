input S3ObjectInput {
  bucket: String!
  key: String!
  region: String!
  localUri: String
  mimeType: String
}

type S3Object @aws_iam {
  bucket: String!
  key: String!
  region: String!
}

type Screenshot
  @model
  @auth(
    rules: [
      { allow: owner, ownerField: "owner", operations: [create, read] }
    ]
  ) {
  id: ID!
  createdAt: String!
  file: S3Object!
  owner: String
}

input CreateScreenshotInput {
  id: ID
  createdAt: String
  file: S3ObjectInput!
}

input CreateHighlightInput {
  id: ID
  createdAt: String
  text: String!
  note: String
  highlightScreenshotId: ID
}

type Highlight
  @model
  @key(fields: ["id"])
  @auth(
    rules: [
      {
        allow: owner
        ownerField: "owner"
        operations: [create, read, update, delete]
      }
    ]
  ) {
  id: ID!
  createdAt: String!
  text: String!
  note: String
  screenshot: Screenshot @connection
  owner: String
}

input CreateHighlightFromScreenshotInput {
  id: ID
  createdAt: String
  screenshotId: String!
  note: String
}

type Mutation {
  createHighlightFromScreenshot(
    input: CreateHighlightFromScreenshotInput!
  ): Highlight
    @function(name: "GraphQLResolver-${env}")
    @auth(rules: [{ allow: private }])
}
